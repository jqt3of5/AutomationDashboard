{"version":3,"sources":["logo.svg","Firebase/Firestore.js","Firebase/Fixture.js","Firebase/Test.js","Firebase/TestRun.js","Shared/Table.js","TestRuns.js","Firebase/TestStep.js","TestRunDetails.js","TestList.js","FixtureList.js","TestDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Fixture","doc","this","name","get","description","namespace","Promise","resolve","reject","Test","testId","id","test","then","fixtureDoc","getFixture","fixture","TestRun","automationAgent","targetBranchName","targetBuildNumber","targetCommitHash","codeLink","start","toDate","toLocaleString","end","milis","time","Date","duration","getHours","getMinutes","getSeconds","testParams","videoURL","status","testRun","tfDoc","testDoc","getTest","Object","valueFromPath","path","obj","split","reduce","previousValue","currentValue","Table","props","className","keys","columns","map","column","i","key","ArrowIcon","data","values","j","to","match","url","idField","React","Component","direction","getDirectionClass","focusable","viewBox","aria-hidden","role","d","RoutedTable","withRouter","TestRuns","state","testRuns","fetchTestRuns","db","firestore","collection","undefined","testid","where","query","forEach","console","log","getTestRun","push","setState","TestStep","stepDoc","action","actionParams","beforeImageURL","elementFindBy","elementLocator","actionStart","actionEnd","failedReason","foundElementImageURL","imageOfElement","pageClassName","elementPropertyName","sourceFileName","sourceLineNumber","targetProcessMemoryUsage","testMemoryUsage","TestRunDetails","fixtureName","testName","runId","steps","currentStep","stepsDoc","runDoc","fetchTestSteps","class","TestStepsList","TestStepRow","stepName","TestStepView","TestList","tests","fetchTests","FixtureList","fixtures","TestDetails","params","SidebarItem","PrefIcon","title","transform","fill","Header","App","selected","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c102e40d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAXZF-wzySPqnfCOXfOhmZujAAYLbwf_wg\",\r\n    authDomain: \"automationdashboard-2d2e6.firebaseapp.com\",\r\n    databaseURL: \"https://automationdashboard-2d2e6.firebaseio.com\",\r\n    projectId: \"automationdashboard-2d2e6\",\r\n    storageBucket: \"automationdashboard-2d2e6.appspot.com\",\r\n    messagingSenderId: \"996318411352\",\r\n    appId: \"1:996318411352:web:9e1ba637edd8f4ab9ba82d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","export default class Fixture {\r\n    constructor(doc) {\r\n        this.name = doc.get(\"Name\")\r\n        this.description = doc.get(\"Description\")\r\n        this.namespace = doc.get(\"Namespace\")\r\n    }\r\n\r\n    static getFixture(doc)\r\n    {\r\n        return new Promise((resolve, reject) => resolve(new Fixture(doc)))\r\n    }\r\n}\r\n","import Fixture from \"./Fixture\"\r\nexport default class Test {\r\n    constructor(doc) {\r\n        this.testId = doc.id\r\n\r\n        this.name = doc.get(\"Name\")\r\n        this.description = doc.get(\"Description\")\r\n    }\r\n\r\n    static getTest(doc) {\r\n        var test = new Test(doc)\r\n        return doc.get(\"TestFixture\").get().then(fixtureDoc => {\r\n               return Fixture.getFixture(fixtureDoc)\r\n        }).then(fixture => {\r\n            test.fixture = fixture\r\n            return test\r\n        })\r\n    }\r\n}\r\n","import Fixture from \"./Fixture\";\r\nimport Test from \"./Test\";\r\n\r\nexport default class TestRun {\r\n    constructor(doc) {\r\n        this.automationAgent = doc.get(\"AutomationAgent\")\r\n        this.targetBranchName = doc.get(\"TargetBranchName\")\r\n        this.targetBuildNumber = doc.get(\"TargetBuildNumber\")\r\n        this.targetCommitHash = doc.get(\"TargetCommitHash\")\r\n        this.codeLink = doc.get(\"CodeLink\")\r\n        this.start = doc.get(\"TestStart\").toDate().toLocaleString()\r\n        this.end = doc.get(\"TestEnd\").toDate().toLocaleString()\r\n        let milis = (doc.get(\"TestEnd\").toDate() - doc.get(\"TestStart\").toDate())\r\n        let time = new Date(0,0,0,0,0,0,milis)\r\n\r\n        this.duration = time.getHours() + \":\"+time.getMinutes() + \":\" + time.getSeconds()\r\n        this.testParams = doc.get(\"TestParams\")\r\n        this.videoURL = doc.get(\"VideoURL\")\r\n        this.status = doc.get(\"TestStatus\")\r\n\r\n    }\r\n    static getTestRun(doc) {\r\n        var testRun = new TestRun(doc)\r\n\r\n        return doc.get(\"TestFixture\").get().then(tfDoc => {\r\n            return Fixture.getFixture(tfDoc)\r\n        }).then(fixture => {\r\n            testRun.fixture = fixture\r\n            return doc.get(\"Test\").get()\r\n        }).then(testDoc => {\r\n            return Test.getTest(testDoc)\r\n        }).then(test => {\r\n            testRun.test = test\r\n            return testRun\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport './Table.css';\r\nimport '../common.css';\r\nimport {Route, NavLink, HashRouter, BrowserRouter, Link, withRouter} from \"react-router-dom\"\r\n\r\nObject.valueFromPath = (path, obj) => path.split(\".\").reduce((previousValue, currentValue) => previousValue[currentValue], obj)\r\n\r\nclass Table extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n    \r\n    componentDidMount() {\r\n    }\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <table>\r\n                <thead className={\"header\"}>\r\n                    <tr>\r\n                        {Object.keys(this.props.columns).map((column, i) => {\r\n                            return (\r\n                                <th key={i} className={\"header-cell header-cell-alignLeft \" + (i == 0 ? \"primary-cell\" : \"\")}>\r\n                                    <span>\r\n                                        {column}\r\n                                        <ArrowIcon/>\r\n                                    </span>\r\n                                </th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {this.props.data.map((data, i) => {\r\n                        return (\r\n                                <tr key={i} className={\"body-row\"} >\r\n                                    {\r\n                                        Object.values(this.props.columns).map((column, j) => {\r\n                                            return (\r\n                                                <td key={j} className={j == 0 ? \"primary-cell\" : \"\"}>\r\n                                                    <Link to={`${this.props.match.url}/${data[this.props.idField]}`} >\r\n                                                        <div>{Object.valueFromPath(column, data)}</div>\r\n                                                    </Link>\r\n                                                </td>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nfunction ArrowIcon(props)\r\n{\r\n    function getDirectionClass()\r\n    {\r\n        switch(props.direction)\r\n        {\r\n            case \"descending\":\r\n                return \"arrow-icon-descending\"\r\n            case \"ascending\":\r\n                return \"arrow-icon-ascending\"\r\n            default:\r\n                return \"\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <svg className={\"arrow-icon \" + getDirectionClass()} focusable=\"false\"\r\n             viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\r\n            <path d=\"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport const RoutedTable = withRouter(Table)\r\n\r\n\r\n","import React from 'react';\r\nimport './TestRuns.css';\r\nimport './common.css';\r\nimport firebase from './Firebase/Firestore.js'\r\nimport TestRun from \"./Firebase/TestRun\";\r\nimport Table, {RoutedTable} from \"./Shared/Table\"\r\n\r\nclass TestRuns extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            testRuns :[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchTestRuns()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    fetchTestRuns()\r\n    {\r\n        var testRuns = []\r\n        const db = firebase.firestore();\r\n\r\n        var collection = db.collection(\"TestRuns\")\r\n\r\n        if (this.props.testid !== undefined)\r\n        {\r\n            const test = db.collection(\"Tests\").doc(this.props.testid)\r\n            collection = collection.where(\"Test\", \"==\", test)\r\n        }\r\n\r\n        return collection.get().then(\r\n                query => {\r\n                    query.forEach(doc => {\r\n                            console.log(doc)\r\n                            TestRun.getTestRun(doc).then(testRun => {\r\n                                testRuns.push(testRun)\r\n                                this.setState({testRuns:testRuns})\r\n                            })\r\n                        })\r\n                }\r\n        )\r\n    }\r\n\r\n    render () {\r\n        var columns = {\r\n            \"Branch Name\":\"targetBranchName\",\r\n            \"Build Number\":\"targetBuildNumber\",\r\n            \"Started\":\"start\",\r\n            \"Ended\":\"end\",\r\n            \"Test Fixture\":\"testFixtureName\",\r\n            \"Test Name\":\"testName\"}\r\n        return <RoutedTable columns={columns} data={this.state.testRuns}/>\r\n    }\r\n}\r\n\r\nexport default TestRuns;","\r\nexport class TestStep\r\n{\r\n    constructor(stepDoc) {\r\n        this.action = stepDoc.get(\"Action\")\r\n        this.actionParams = stepDoc.get(\"ActionParams\")\r\n        this.beforeImageURL = stepDoc.get(\"BeforeImageURL\")\r\n        this.elementFindBy = stepDoc.get(\"ElementFindBy\")\r\n        this.elementLocator = stepDoc.get(\"ElementLocator\")\r\n        this.actionStart = stepDoc.get(\"ActionStart\")\r\n        this.actionEnd = stepDoc.get(\"ActionEnd\")\r\n        this.failedReason = stepDoc.get(\"FailedReason\")\r\n        this.foundElementImageURL = stepDoc.get(\"FoundElementImageURL\")\r\n        this.imageOfElement = stepDoc.get(\"ImageOfElement\")\r\n        this.pageClassName = stepDoc.get(\"Page\")\r\n        this.elementPropertyName = stepDoc.get(\"Property\")\r\n        this.sourceFileName = stepDoc.get(\"SourceFileName\")\r\n        this.sourceLineNumber = stepDoc.get(\"SourceLineNumber\")\r\n        this.targetProcessMemoryUsage = stepDoc.get(\"TargetProcessMemoryUsage\")\r\n        this.testMemoryUsage = stepDoc.get(\"TestMemoryUsage\")\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './TestSteps.css';\r\nimport './common.css';\r\nimport firebase from './Firebase/Firestore.js'\r\nimport {TestStep} from \"./Firebase/TestStep\";\r\nimport TestRun from \"./Firebase/TestRun\";\r\n\r\nexport default class TestRunDetails extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            fixtureName:props.fixtureName,\r\n            testName:props.testName,\r\n            runId: props.runId,\r\n            steps: [],\r\n            testRun: {},\r\n            currentStep: 0\r\n        }\r\n    }\r\n\r\n    fetchTestSteps()\r\n    {\r\n        let db = firebase.firestore();\r\n        db\r\n            .collection(\"TestRuns\")\r\n            .doc(this.state.runId)\r\n            .collection(\"TestSteps\")\r\n            .get().then(stepsDoc =>\r\n                {\r\n                    var steps = []\r\n\r\n                    stepsDoc.forEach(doc => {\r\n                            steps.push(new TestStep(doc))\r\n                            this.setState({steps:steps})\r\n                        })\r\n                })\r\n        db\r\n            .collection(\"TestRuns\")\r\n            .doc(this.state.runId)\r\n            .get().then(runDoc =>\r\n                {\r\n                    var testRun = new TestRun(runDoc)\r\n                    this.setState({testRun:testRun})\r\n\r\n\r\n                })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchTestSteps()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class={\"test-steps-root\"}>\r\n                <TestStepsList></TestStepsList>\r\n                <TestStepView></TestStepView>\r\n            </div>)\r\n    }\r\n}\r\n\r\nclass TestStepsList extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class={\"test-step-list\"}>\r\n                <TestStepRow stepName={\"Click\"}></TestStepRow>\r\n                <TestStepRow stepName={\"Click 2\"}></TestStepRow>\r\n                <TestStepRow stepName={\"Click 2\"}></TestStepRow>\r\n                <TestStepRow stepName={\"Click 2\"}></TestStepRow>\r\n                <TestStepRow stepName={\"Click 2\"}></TestStepRow>\r\n                <TestStepRow stepName={\"Click 2\"}></TestStepRow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction TestStepRow(props)\r\n{\r\n    return (\r\n        <div class={\"test-step-row\"}>\r\n            <div class={\"selected-ribbon\"}></div>\r\n            <p>{props.stepName}</p>\r\n        </div>)\r\n}\r\n\r\nclass TestStepView extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return <div>content</div>\r\n    }\r\n}","import React from 'react';\r\nimport './common.css';\r\nimport firebase from './Firebase/Firestore.js'\r\nimport Test from \"./Firebase/Test\";\r\nimport {RoutedTable} from \"./Shared/Table\"\r\n\r\n\r\nexport default class TestList extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            tests :[],\r\n        }\r\n\r\n        this.db = firebase.firestore()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchTests()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    fetchTests()\r\n    {\r\n        var tests = []\r\n        this.db\r\n            .collection(\"Tests\")\r\n            .get().then(\r\n                query => {\r\n                    query.forEach(doc => {\r\n                        Test.getTest(doc).then(test => {\r\n                            tests.push(test)\r\n                            this.setState({tests:tests})\r\n                        })\r\n                    })\r\n                }\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return <RoutedTable columns={{\"TestFixture\":\"fixture.name\", \"Test\":\"name\"}} idField = {\"testId\"} data={this.state.tests}></RoutedTable>\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './common.css';\r\nimport firebase from './Firebase/Firestore.js'\r\nimport Fixture from \"./Firebase/Fixture\";\r\nimport {RoutedTable} from \"./Shared/Table\";\r\n\r\nexport default class FixtureList extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            fixtures :[],\r\n        }\r\n\r\n        this.db = firebase.firestore()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchTests()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    fetchTests()\r\n    {\r\n        var fixtures = []\r\n        return this.db\r\n            .collection(\"Fixtures\")\r\n            .get().then(\r\n                query => {\r\n                    query.forEach(doc => {\r\n                        Fixture.getFixture(doc).then(fixture => {\r\n                            fixtures.push(test)\r\n                            this.setState({fixtures:fixtures})\r\n                        })\r\n                    })\r\n                }\r\n            )\r\n    }\r\n\r\n    render () {\r\n        return <RoutedTable columns={{\r\n                \"TestFixture\": \"testFixtureName\",\r\n                \"Description\": \"description\"\r\n                }} data={this.state.fixtures}/>\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './common.css';\r\nimport firebase from './Firebase/Firestore.js'\r\nimport TestRuns from \"./TestRuns\";\r\nimport Test from \"./Firebase/Test\";\r\n\r\nexport class TestDetails extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            test: {},\r\n        }\r\n\r\n        this.db = firebase.firestore()\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    fetchTest() {\r\n        this.db.collection(\"/Tests\")\r\n        .doc(this.props.match.params.testid).get()\r\n        .then(doc => {\r\n            return Test.getTest(doc)\r\n        }).then(test => {\r\n            this.setState({test:test})\r\n        })\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div>\r\n                <TestRuns testid={this.props.match.params.testid}/>\r\n            </div>)\r\n        //<Table baseUrl={\"/testruns\"} columns={columns} data={this.state.testRuns}/>\r\n    }\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport './common.css';\r\nimport {Route, NavLink, HashRouter, BrowserRouter, Switch} from \"react-router-dom\"\r\nimport TestRuns from \"./TestRuns\";\r\nimport TestRunDetails from \"./TestRunDetails\";\r\nimport TestList from \"./TestList\";\r\nimport FixtureList from \"./FixtureList\";\r\nimport {TestDetails} from \"./TestDetails\";\r\n\r\nclass App extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <BrowserRouter>\r\n                    <div className=\"sidebar\">\r\n                        <div className={\"sidebar-header\"}>Automation</div>\r\n                        <NavLink to={\"/tests\"}><SidebarItem title={\"Tests\"} selected={\"true\"}/></NavLink>\r\n                        <NavLink to={\"/testruns\"}><SidebarItem title={\"Test Runs\"}/></NavLink>\r\n                        <NavLink to={\"/preferences\"}><SidebarItem title={\"Preferences\"}/></NavLink>\r\n                    </div>\r\n                    <div className={\"content\"}>\r\n                        <Header title={\"Test Runs\"}/>\r\n                        <div className={\"page\"}>\r\n\r\n                            <Switch>\r\n                                <Route exact path={\"/fixtures\"} component={FixtureList}/>\r\n                                <Route exact path={\"/tests\"} component={TestList}/>\r\n                                <Route exact path={\"/tests/:testid\"} component={TestDetails}/>\r\n\r\n                                <Route exact path={\"/testruns\"} component={TestRuns}/>\r\n                                <Route exact path={\"/testruns/:testrunid\"} component={TestRunDetails}/>\r\n\r\n                                <Route exact path={\"/preferences\"}/>\r\n                            </Switch>\r\n\r\n                        </div>\r\n                    </div>\r\n                </BrowserRouter>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction SidebarItem(props){\r\n    return (\r\n        <div className={\"sidebar-item\"}>\r\n            <div className={\"selected-ribbon\"}></div>\r\n            <PrefIcon/>\r\n            <p>{props.title}</p>\r\n        </div>)\r\n}\r\n\r\nfunction PrefIcon() {\r\n    return (<svg className={\"sidebar-icon\"} focusable=\"false\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" role=\"presentation\">\r\n        <path transform=\"scale(1.2, 1.2)\" fill=\"none\" d=\"M0 0h20v20H0V0z\"></path>\r\n        <path transform=\"scale(1.2, 1.2)\"\r\n              d=\"M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z\"></path>\r\n    </svg>)\r\n}\r\n\r\nfunction Header (props){\r\n    return (\r\n        <div>\r\n            <div className={\"content-header\"}>\r\n                <p className={\"content-header-inner\"}>{props.title}</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}